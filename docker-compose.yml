version: '3.8'

services:
  # Redis for Celery broker
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - UPLOAD_DIR=/app/uploads
      - DEBUG=true
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Worker
  celery-worker:
    build: ./backend
    command: celery -A app.tasks worker --loglevel=info
    environment:
      - REDIS_URL=redis://redis:6379
      - UPLOAD_DIR=/app/uploads
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
    depends_on:
      - redis
      - backend

  # Celery Beat (Scheduler)
  celery-beat:
    build: ./backend
    command: celery -A app.tasks beat --loglevel=info
    environment:
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./backend:/app
    depends_on:
      - redis
      - backend

  # Frontend
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=http://localhost:8000
    depends_on:
      - backend

  # Pinecone stub (for development)
  pinecone-stub:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./pinecone-stub.conf:/etc/nginx/conf.d/default.conf
    command: |
      sh -c "echo 'server { listen 80; location / { return 200 \"Pinecone stub running\"; add_header Content-Type text/plain; } }' > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

volumes:
  redis_data:
  uploads_data: